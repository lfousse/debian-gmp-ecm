Description: Fix compilation with SSE2 by passing -msse2
Origin: https://gforge.inria.fr/scm/viewvc.php?view=rev&root=ecm&revision=1546

Index: gmp-ecm-6.3/configure.in
===================================================================
--- gmp-ecm-6.3.orig/configure.in	2010-07-28 03:24:22.000000000 -0400
+++ gmp-ecm-6.3/configure.in	2011-11-30 13:41:13.285859861 -0500
@@ -275,9 +275,9 @@
   AC_MSG_CHECKING([for SSE2 support])
   m4_define([SSE2_TEST_PROG], [AC_LANG_PROGRAM([], dnl
 [#if (defined(__GNUC__) || defined(__ICL)) && defined(__i386__)
-/* When there are no constraints, registers are referred to by
-   single % sign, not double. Argh */
-asm volatile ("pmuludq %xmm2, %xmm0");
+/* On some machines, a program without constraints may pass without -msse2 but
+   those with constraints in spv.c fail, thus we test with constraints here. */
+asm volatile ("pmuludq %%xmm2, %%xmm0" : : :"%xmm0");
 #else
 #error
 #IRIXdoesnotexitaterrordirective
Index: gmp-ecm-6.3/configure
===================================================================
--- gmp-ecm-6.3.orig/configure	2011-11-30 13:24:16.000000000 -0500
+++ gmp-ecm-6.3/configure	2011-11-30 13:47:47.545864034 -0500
@@ -11844,9 +11844,9 @@
 main ()
 {
 #if (defined(__GNUC__) || defined(__ICL)) && defined(__i386__)
-/* When there are no constraints, registers are referred to by
-   single % sign, not double. Argh */
-asm volatile ("pmuludq %xmm2, %xmm0");
+/* On some machines, a program without constraints may pass without -msse2 but
+   those with constraints in spv.c fail, thus we test with constraints here. */
+asm volatile ("pmuludq %%xmm2, %%xmm0" : : :"%xmm0");
 #else
 #error
 #IRIXdoesnotexitaterrordirective
@@ -11868,9 +11868,9 @@
 main ()
 {
 #if (defined(__GNUC__) || defined(__ICL)) && defined(__i386__)
-/* When there are no constraints, registers are referred to by
-   single % sign, not double. Argh */
-asm volatile ("pmuludq %xmm2, %xmm0");
+/* On some machines, a program without constraints may pass without -msse2 but
+   those with constraints in spv.c fail, thus we test with constraints here. */
+asm volatile ("pmuludq %%xmm2, %%xmm0" : : :"%xmm0");
 #else
 #error
 #IRIXdoesnotexitaterrordirective
